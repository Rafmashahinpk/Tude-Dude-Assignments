{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5839c379-5abb-4047-8a7a-24199a92f43c",
   "metadata": {},
   "outputs": [],
   "source": [
    "employees = {\n",
    "    101: {'name': 'Satya', 'age': 27, 'department': 'HR', 'salary': 50000}\n",
    "}\n",
    "\n",
    "def add_employee():\n",
    "    try:\n",
    "        emp_id = int(input(\"Enter Employee ID: \"))\n",
    "        if emp_id in employees:\n",
    "            print(\"Employee ID already exists. Please try a different ID.\")\n",
    "            return\n",
    "        \n",
    "        name = input(\"Enter Name: \")\n",
    "        age = int(input(\"Enter Age: \"))\n",
    "        department = input(\"Enter Department: \")\n",
    "        salary = float(input(\"Enter Salary: \"))\n",
    "        \n",
    "        employees[emp_id] = {'name': name, 'age': age, 'department': department, 'salary': salary}\n",
    "        print(\"Employee added successfully!\")\n",
    "    except ValueError:\n",
    "        print(\"Invalid input. Please enter correct data types.\")\n",
    "\n",
    "def view_employees():\n",
    "    if not employees:\n",
    "        print(\"No employees available.\")\n",
    "        return\n",
    "    \n",
    "    print(\"\\n{:<10} {:<15} {:<5} {:<15} {:<10}\".format('ID', 'Name', 'Age', 'Department', 'Salary'))\n",
    "    print(\"-\" * 60)\n",
    "    for emp_id, details in employees.items():\n",
    "        print(\"{:<10} {:<15} {:<5} {:<15} {:<10}\".format(\n",
    "            emp_id, details['name'], details['age'], details['department'], details['salary']\n",
    "        ))\n",
    "\n",
    "def search_employee():\n",
    "    try:\n",
    "        emp_id = int(input(\"Enter Employee ID to search: \"))\n",
    "        if emp_id in employees:\n",
    "            emp = employees[emp_id]\n",
    "            print(f\"Name: {emp['name']}, Age: {emp['age']}, Department: {emp['department']}, Salary: {emp['salary']}\")\n",
    "        else:\n",
    "            print(\"Employee not found.\")\n",
    "    except ValueError:\n",
    "        print(\"Please enter a valid Employee ID.\")\n",
    "\n",
    "def main_menu():\n",
    "    while True:\n",
    "        print(\"\\n--- Employee Management System ---\")\n",
    "        print(\"1. Add Employee\")\n",
    "        print(\"2. View All Employees\")\n",
    "        print(\"3. Search for Employee\")\n",
    "        print(\"4. Exit\")\n",
    "        choice = input(\"Enter your choice (1-4): \")\n",
    "        \n",
    "        if choice == '1':\n",
    "            add_employee()\n",
    "        elif choice == '2':\n",
    "            view_employees()\n",
    "        elif choice == '3':\n",
    "            search_employee()\n",
    "        elif choice == '4':\n",
    "            print(\"Thank you for using the EMS.\")\n",
    "            break\n",
    "        else:\n",
    "            print(\"Invalid choice. Please try again.\")\n",
    "\n",
    "# Run the program\n",
    "main_menu()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
